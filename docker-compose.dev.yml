version: "3.7"

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: '$ZOOKEEPER_CONTAINER_NAME'
    expose:
      - '$ZOOKEEPER_PORT'
    env_file:
      - ./env/.env.dev
    environment:
      - ALLOW_ANONYMOUS_LOGIN=$ZOOKEEPER_ALLOW_ANONYMOUS_LOGIN

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: '$KAFKA_CONTAINER_NAME'
    expose:
      - '$KAFKA_PORT'
    env_file:
      - ./env/.env.dev
    environment:
      - KAFKA_BROKER_ID=$KAFKA_BROKER_ID
      - KAFKA_LISTENERS=$KAFKA_LISTENERS
      - KAFKA_ADVERTISED_LISTENERS=$KAFKA_ADVERTISED_LISTENERS
      - KAFKA_ZOOKEEPER_CONNECT=$KAFKA_ZOOKEEPER_CONNECT
      - ALLOW_PLAINTEXT_LISTENER=$KAFKA_ALLOW_PLAINTEXT_LISTENER
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=$KAFKA_CFG_DELETE_TOPIC_ENABLE
    depends_on:
      - zookeeper

  producer:
    env_file:
      - ./env/.env.dev
    entrypoint: "python /entrypoint.d/wait_for_kafka.py"
    command: "python main.py producer http://google.com --pattern \"I'm Feeling Lucky\" --interval 10.0"
    depends_on:
      - kafka

  consumer:
    env_file:
      - ./env/.env.dev
      - ./env/.env.db.dev
    entrypoint: "/entrypoint.d/wait_for_postgres.sh python /entrypoint.d/wait_for_kafka.py"
    command: "python main.py consumer"
    depends_on:
      - kafka
      - db
